{"version":3,"sources":["commpents/Channel-Table.js","commpents/Product-Table.js","commpents/Form-Search.js","commpents/Records-Table.js","commpents/Details-Table.js","commpents/Home.js","App.js","serviceWorker.js","index.js"],"names":["ChannelTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","columns","title","field","lookup","1","0","channelData","productData","_this2","data","length","react_default","a","createElement","dist_default","detailPanel","tooltip","render","rowData","list","map","v","i","ListItem","key","dense","ListItemText","description","name","List","style","paddingLeft","options","actionsColumnIndex","pageSize","editable","onRowAdd","newData","Promise","resolve","setTimeout","axios","post","then","response","console","log","catch","error","toConsumableArray","push","setState","onRowUpdate","oldData","method","url","status","id","transformRequest","ret","it","encodeURIComponent","substring","lastIndexOf","headers","Content-Type","indexOf","React","Component","ProductTable","objectSpread","minFirstPay","useStyles","makeStyles","theme","root","margin","spacing","position","formControl","minWidth","maxWidth","timeForm","group","RadioGroup","right","top","marginTop","button","width","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","FormSearch","classes","_React$useState","useState","_React$useState2","slicedToArray","channel","setChannel","_React$useState3","_React$useState4","product","setProduct","_React$useState5","Date","_React$useState6","startDate","setStartDate","_React$useState7","_React$useState8","endDate","setEndDate","_React$useState9","_React$useState10","setMethod","enqueueSnackbar","useSnackbar","GMTToStr","time","date","getFullYear","getMonth","getDate","className","FormControl","InputLabel","htmlFor","Select","multiple","value","onChange","event","target","input","Input","renderValue","selected","join","MenuItem","Checkbox","checked","primary","MuiPickersUtilsProvider","utils","DateFnsUtils","DatePicker","disableToolbar","variant","format","label","KeyboardButtonProps","aria-label","FormLabel","component","row","FormControlLabel","control","Radio","color","Button","onClick","c","p","j","n","st","et","autoHideDuration","searchBtn","RecordsTable","columnsDay","columnsTotal","handleChange","setRecordsDetails","_this3","page","pageSizeOptions","exportButton","exportCsv","actions","icon","components","Action","action","textTransform","size","Toolbar","dist","bind","withSnackbar","DetailsTable","TabPanel","children","index","other","objectWithoutProperties","Typography","assign","role","hidden","concat","aria-labelledby","Box","a11yProps","aria-controls","SimpleTabs","recordsDetails","detailsTitle","newValue","abc","postData","transformName","alert","AppBar","Tabs","Tab","Records_Table","Channel_Table","Product_Table","Details_Table","App","Home_SimpleTabs","Boolean","window","location","hostname","match","ReactDOM","build","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.838411f4.chunk.js","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\nimport axios from 'axios';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nclass ChannelTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: 'Name', field: 'name' },\n        { title: 'Description', field: 'description' },\n        { \n          title: 'Status', \n          field: 'status',\n          lookup: { 1 :\"有效\", 0:\"无效\"},\n        }\n      ],\n      channelData:[],\n      productData:[]\n    }\n  }\n\n  // componentDidMount(){\n  //   let url = 'http://api-test.xinwentuan.com/getdata.php';\n  //   axios.post(url)\n  //     .then(response =>{\n  //       this.setState({\n  //         data:response.data\n  //       })\n  //     })\n\n  //   let url2 = 'http://api-test.xinwentuan.com/product/getdata.php';\n  //     axios.post(url2)\n  //       .then(response =>{\n  //         let arrName = response.data.map((v,i)=>{\n  //           let obj = {};\n  //           obj.name = v.name;\n  //           obj.description = v.description;\n  //           return obj;\n  //         });\n  //         this.setState({\n  //           productName:arrName\n  //         })\n  //       })\n  // }\n\n  render(){\n    const data = this.state.channelData.length ? this.state.channelData : this.props.channelData;\n    return (\n      <MaterialTable\n        title=\"渠道表\"\n        columns={this.state.columns}\n        data={data}\n        detailPanel={[\n          {\n            tooltip: '产品连接',\n            render: rowData => {\n              let list = this.props.productData.map((v,i)=>{\n                return (<ListItem key={i} dense={true}>\n                    <ListItemText>产品：{v.description}</ListItemText>\n                    <ListItemText>连接：https://simcard.jiuyuanxx.com/zop/link/card.html?channel={rowData.name}&product={v.name}&oid=[__OID__]</ListItemText>\n                  </ListItem>)\n              })\n              return (\n                <List style={{\n                  paddingLeft: '10%',\n                  // maxWidth: '80%',\n                }}>\n                  {list}\n                </List>\n              )\n            },\n          }\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n          pageSize:data.length,\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                axios.post('http://api-test.xinwentuan.com/adddata.php',{\n                  data:newData\n                })\n                .then(response => {\n                  console.log(response.data);\n                })\n                .catch(error => {\n                  console.log(error);\n                })\n                const data = [...this.props.channelData];\n                data.push(newData);\n                this.setState({channelData:data});\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                // console.log('newData:',newData);\n                axios({\n                  method: 'post',\n                  url: 'http://api-test.xinwentuan.com/updata2.php',\n                  data: {\n                     name: newData.name,\n                     description: newData.description,\n                     status: newData.status,\n                     id: newData.id,\n                  },\n                  transformRequest: [\n                     function (data) {\n                        let ret = ''\n                        for (let it in data) {\n                           ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n                        }\n                        ret = ret.substring(0, ret.lastIndexOf('&'));\n                        return ret\n                     }\n                   ],\n                   headers: {\n                      'Content-Type': 'application/x-www-form-urlencoded'\n                   }\n                })\n                const data = [...this.props.channelData];\n                data[data.indexOf(oldData)] = newData;\n                this.setState({channelData:data});\n              }, 600);\n            }),\n          // onRowDelete: oldData =>\n          //   new Promise(resolve => {\n          //     setTimeout(() => {\n          //       resolve();\n          //       axios.post('http://api-test.xinwentuan.com/deldata.php',{\n          //         data:oldData\n          //       })\n          //       .then(response => {\n          //         console.log(response.data);\n          //       })\n          //       .catch(error => {\n          //         console.log(error);\n          //       })\n          //       const data = [...this.state.channelData];\n          //       data.splice(data.indexOf(oldData), 1);\n          //       this.setState({ ...this.state, data });\n          //     }, 600);\n          //   }),\n        }}\n      />\n    );\n  }\n}\n\n\n\nexport default ChannelTable;\n\n","import React from 'react';\nimport MaterialTable from 'material-table';\nimport axios from 'axios';\n\nclass ProductTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        columns: [\n          { title: 'Name', field: 'name' },\n          { title: 'Description', field: 'description' },\n          { title: 'Url', field: 'url'},\n          { title: 'minFirstPay', field: 'minFirstPay'},\n          { title: 'Status', field: 'status', lookup: { 1 :\"有效\", 0:\"无效\"} }\n        ],\n      data: []\n    }\n  }\n\n  // componentDidMount(){\n  //   let url = 'http://api-test.xinwentuan.com/product/getdata.php';\n  //   axios.post(url)\n  //     .then(response =>{\n  //       this.setState({\n  //         data:response.data\n  //       })\n  //     })\n  // }\n\n  render(){\n    const data = this.state.data.length ? this.state.data : this.props.productData;\n    return (\n      <MaterialTable\n        title=\"产品表\"\n        columns={this.state.columns}\n        data={data}\n        options={{\n          actionsColumnIndex: -1,\n          pageSize:data.length,\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                axios.post('http://api-test.xinwentuan.com/product/adddata.php',{\n                  data:newData\n                })\n                .then(response => {\n                  console.log(response.data);\n                })\n                .catch(error => {\n                  console.log(error);\n                })\n                const data = [...this.props.productData];\n                data.push(newData);\n                this.setState({ ...this.state, data});\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                axios({\n                  method: 'post',\n                  url: 'http://api-test.xinwentuan.com/product/updata.php',\n                  data: {\n                     name: newData.name,\n                     description: newData.description,\n                     url: newData.url,\n                     minFirstPay: newData.minFirstPay,\n                     status: newData.status,\n                     id: newData.id,\n                  },\n                  transformRequest: [\n                     function (data) {\n                        let ret = ''\n                        for (let it in data) {\n                           ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n                        }\n                        ret = ret.substring(0, ret.lastIndexOf('&'));\n                        return ret\n                     }\n                   ],\n                   headers: {\n                      'Content-Type': 'application/x-www-form-urlencoded'\n                   }\n                })\n                const data = [...this.props.productData];\n                data[data.indexOf(oldData)] = newData;\n                this.setState({ ...this.state, data });\n              }, 600);\n            }),\n          // onRowDelete: oldData =>\n          //   new Promise(resolve => {\n          //     setTimeout(() => {\n          //       resolve();\n          //       axios.post('http://api-test.xinwentuan.com/product/deldata.php',{\n          //         data:oldData\n          //       })\n          //       .then(response => {\n          //         console.log(response.data);\n          //       })\n          //       .catch(error => {\n          //         console.log(error);\n          //       })\n          //       const data = [...this.state.data];\n          //       data.splice(data.indexOf(oldData), 1);\n          //       this.setState({ ...this.state, data });\n          //     }, 600);\n          //   }),\n        }}\n      />\n    );\n  }\n}\n\nexport default ProductTable;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(0, 3, 2),\n    position:\"relative\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 222,\n    maxWidth: 222,\n  },\n  timeForm:{\n    margin: theme.spacing(1),\n  },\n  group: {\n    margin: theme.spacing(1, 0),\n  },\n  RadioGroup:{\n    position: \"absolute\",\n    right: 185,\n    top:0,\n    marginTop:80,\n  },\n  button: {\n    width:85,\n    position: \"absolute\",\n    right: 50,\n    top:100,\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function FormSearch(props) {\n  const classes = useStyles();\n\n  const [channel, setChannel] = React.useState([\"全部\"]);\n  const [product, setProduct] = React.useState([\"全部\"]);\n  const [startDate, setStartDate] = React.useState(new Date(new Date()-72*60*60*1000));\n  const [endDate, setEndDate] = React.useState(new Date());\n  const [method, setMethod] = React.useState('day');\n  const { enqueueSnackbar } = useSnackbar();\n\n  function handleChangeChannel(event) {\n    setChannel(event.target.value);\n    // console.log('channel',event.target.value);\n  }\n  function handleChangeProduct(event) {\n    setProduct(event.target.value);\n    // console.log('product',event.target.value);\n  }\n  function handleChangeStartDate(date) {\n    setStartDate(date);\n    // console.log('st',date);\n  }\n  function handleChangeEndDate(date) {\n    setEndDate(date);\n    // console.log('et',date);\n  }\n  function handleChangeMthod(event) {\n    setMethod(event.target.value);\n    // console.log('method',event.target.value);\n  }\n  function GMTToStr(time){\n    let date = new Date(time)\n    let Str=date.getFullYear() + '-' +\n    (date.getMonth() + 1) + '-' + \n    date.getDate()\n    return Str\n  }\n  function btnClick(){\n    const c = []; \n    const p = [];\n    if (channel.length>0) {\n      if (channel.indexOf(\"全部\")>-1) {\n        props.channelData.map((j)=>{\n          c.push(j.name);\n          return c;\n        })\n      } else {\n        channel.map((v)=>{\n          props.channelData.map((n)=>{\n            if (v === n.description) {\n              c.push(n.name);\n            }\n            return n;\n          })\n        return c;\n        })\n      }\n    } else {\n      enqueueSnackbar('渠道不能为空',{variant: 'warning',autoHideDuration: 1000,});\n      return ;\n    };\n    if (product.length>0) {\n      if (product.indexOf(\"全部\")>-1) {\n        props.productData.map((n)=>{\n          p.push(n.name);\n          return c;\n        })\n      } else {\n        product.map((v)=>{\n          props.productData.map((n)=>{\n            if (v === n.description) {\n              p.push(n.name);\n            }\n            return n;\n          })\n          return v;\n        })\n      }\n    } else {\n      enqueueSnackbar('产品不能为空',{variant: 'warning',autoHideDuration: 1000,});\n      return ;\n    };\n\n    const st = GMTToStr(startDate)+\" 0:00:00\";\n    const et = GMTToStr(endDate)+\" 23:59:59\";\n\n    console.log('post->channel:',c);\n    console.log('product:',p);\n    console.log('startDate:',st);\n    console.log('endState:',et);\n    console.log('method:',method);\n    axios({\n      method: 'post',\n      url: 'http://api-test.xinwentuan.com/records/getdata3.php',\n      data: {\n        channel: c,\n        product: p,\n        startDate: st,\n        endDate: et,\n        method: method,\n      },\n      transformRequest: [\n         function (data) {\n            let ret = ''\n            for (let it in data) {\n               ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n            }\n            ret = ret.substring(0, ret.lastIndexOf('&'));\n            return ret\n         }\n       ],\n       headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n       }\n    })\n    .then(response => {\n      if (response.data === 'err') {\n        enqueueSnackbar('未搜索到相应数据',{variant: 'error',autoHideDuration: 1000,});      \n      } else {\n        console.log(\"筛选后数据：\",response.data);\n        props.searchBtn(response.data);      \n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"select-multiple-checkbox\">渠道</InputLabel>\n        <Select\n          multiple\n          value={channel}\n          onChange={handleChangeChannel}\n          input={<Input id=\"select-multiple-checkbox\" />}\n          renderValue={selected => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          <MenuItem key=\"全部\" value=\"全部\">\n            <Checkbox checked={channel.indexOf(\"全部\") > -1} />\n            <ListItemText primary=\"全部\" />\n          </MenuItem>\n          {props.channelData.map(v => (\n            <MenuItem key={v.description} value={v.description}>\n              <Checkbox checked={channel.indexOf(v.description) > -1} />\n              <ListItemText primary={v.description} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"select-product\">产品</InputLabel>\n        <Select\n          multiple\n          value={product}\n          onChange={handleChangeProduct}\n          input={<Input id=\"select-product\" />}\n          renderValue={selected => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          <MenuItem key=\"全部\" value=\"全部\">\n            <Checkbox checked={product.indexOf(\"全部\") > -1} />\n            <ListItemText primary=\"全部\" />\n          </MenuItem>\n          {props.productData.map(v => (\n            <MenuItem key={v.description} value={v.description}>\n              <Checkbox checked={product.indexOf(v.description) > -1} />\n              <ListItemText primary={v.description} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <br />\n      <FormControl className={classes.timeForm}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"yyyy/MM/dd\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"开始日期\"\n          value={startDate}\n          onChange={handleChangeStartDate}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        </MuiPickersUtilsProvider>\n      </FormControl>\n      <FormControl className={classes.timeForm}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"yyyy/MM/dd\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"结束日期\"\n          value={endDate}\n          onChange={handleChangeEndDate}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        </MuiPickersUtilsProvider>\n      </FormControl>\n      <FormControl className={classes.RadioGroup}>\n        <FormLabel component=\"legend\">统计方式</FormLabel>\n        <RadioGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          className={classes.group}\n          value={method}\n          onChange={handleChangeMthod}\n          row\n        >\n          <FormControlLabel value=\"day\" control={<Radio color=\"primary\" />} label=\"天\" />\n          <FormControlLabel value=\"total\" control={<Radio color=\"primary\" />} label=\"合计\" />\n        </RadioGroup>\n      </FormControl>\n      <Button \n      variant=\"contained\" \n      color=\"primary\" \n      className={classes.button} \n      onClick={btnClick}\n      >搜索</Button>\n    </div>\n  );\n}","import React from 'react';\nimport MaterialTable ,{ MTableToolbar }from 'material-table';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport FormSearch from './Form-Search';\nimport { withSnackbar } from 'notistack';\n\nclass RecordsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        columnsDay: [\n          { title: '日期', field: 'date'},\n          { title: '渠道', field: 'channel'},\n          { title: '产品', field: 'product'},\n          { title: '效果数', field: 'count'},\n       ],\n       columnsTotal: [\n        { title: '渠道', field: 'channel'},\n        { title: '产品', field: 'product'},\n        { title: '效果数', field: 'count'},\n      ],\n      data: []\n    }\n  }\n\n  componentDidMount(){\n    let url = 'http://api-test.xinwentuan.com/records/getdata.php';\n    axios.post(url)\n      .then(response =>{\n        this.setState({\n          data:response.data\n        })\n      })\n  }\n\n  handleChange(event,rowData){\n    this.props.handleChange(event,3);\n    this.props.setRecordsDetails(rowData);\n  }\n\n  searchBtn(data){\n    this.setState({data:data})\n  }\n\n  render(){\n    let columns = [];\n    if (this.state.data.length) {\n      columns = this.state.data[0].date?this.state.columnsDay:this.state.columnsTotal;\n    }\n    const page = this.state.data.length<50?this.state.data.length:50;\n\n    return (\n      <MaterialTable\n        title=\"统计\"\n        columns={columns}\n        data={this.state.data}\n        options={{\n          actionsColumnIndex: -1,\n          pageSize:page,\n          pageSizeOptions:[20,50,100],\n          exportButton: true,\n          exportCsv: (columns, data) => {\n            this.props.enqueueSnackbar('未开放',{variant: 'warning',autoHideDuration: 1500,});\n          }\n        }}\n        actions={[\n          {\n            icon: 'save',\n            tooltip: '详情',\n            onClick: (event,rowData) => this.handleChange(event,rowData)\n          }\n        ]}\n        components={{\n          Action: props => (\n            <Button\n              onClick={(event) => props.action.onClick(event, props.data)}\n              color=\"primary\"\n              variant=\"contained\"\n              style={{textTransform: 'none'}}\n              size=\"small\"\n            >\n              详情\n            </Button>\n          ),\n          Toolbar: props => (\n            <div>\n              <MTableToolbar {...props} />\n              <FormSearch \n                channelData={this.props.channelData}\n                productData={this.props.productData}\n                searchBtn={this.searchBtn.bind(this)}\n              />\n            </div>\n          ),\n        }}\n      />\n    );\n  }\n}\n\nexport default withSnackbar(RecordsTable);\n","import React from 'react';\nimport MaterialTable from 'material-table';\n\nclass DetailsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        columns: [\n          { title: 'dt', field: 'dt'},\n          { title: 'channelName', field: 'channelName'},\n          { title: 'productName', field: 'productName'},\n          { title: 'orderId', field: 'orderId' },\n          { title: 'openId', field: 'openId' },\n          { title: 'State', field: 'state'},\n          { title: 'firstPay', field: 'firstPay'},\n          { title: 'msgId', field: 'msgId'},\n          { title: 'Mobile', field: 'mobile'},\n          { title: 'Ctime', field: 'ctime'},\n          { title: 'oid', field: 'oid'},\n       ],\n       data:[],\n       title:\"\",\n    }\n  }\n\n  render(){\n    const data = this.props.data.length ? this.props.data :this.state.data;\n    const page = data.length<50?data.length:50;\n    return (\n      <MaterialTable\n        title={this.props.title}\n        columns={this.state.columns}\n        data={data}\n        options={{\n          pageSize:page,\n          pageSizeOptions:[20,50,100],\n        }}\n      />\n    );\n  }\n}\n\nexport default DetailsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ChannelTable from './Channel-Table';\nimport ProductTable from './Product-Table';\nimport RecordsTable from './Records-Table'\nimport RecordsDetails from './Details-Table';\n// import FormSearch from './Form-Search';\nimport axios from 'axios';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     flexGrow: 1,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n// }));\n\nexport default class SimpleTabs extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      value:0,\n      channelData:[],\n      productData:[],\n      recordsDetails:{},\n      detailsTitle:\"\",\n    }\n  }\n\n  componentDidMount(){\n    let cUrl = 'http://api-test.xinwentuan.com/getdata.php';\n    let pUrl = 'http://api-test.xinwentuan.com/product/getdata.php';\n    axios.post(cUrl)\n      .then(response =>{\n        this.setState({\n          channelData:response.data\n        })\n      })\n    axios.post(pUrl)\n      .then(response =>{\n        this.setState({\n          productData:response.data\n        })\n      })\n  }\n\n  handleChange(event, newValue){\n    this.setState({value:newValue});\n  }\n\n  // description--->name\n  transformName(abc,a){\n    let c = \"\";\n    abc.map((v)=>{\n      if (v.description === a) {c = v.name; return c; } return c;\n    })\n    return c;\n  }\n\n  setRecordsDetails(data){\n    let postData = {};\n    let title = \"渠道：\"+data.channel+\" ，产品：\"+data.product;\n    postData.channel = this.transformName(this.state.channelData,data.channel);\n    postData.product = this.transformName(this.state.productData,data.product);\n    if (data.date) {\n      postData.startDate = data.date+\" 0:00:00\";\n      postData.endDate = data.date+\" 23:59:59\";\n    }\n\n    axios({\n      method: 'post',\n      url: 'http://api-test.xinwentuan.com/records/getdata_details.php',\n      data: postData,\n      transformRequest: [\n         function (data) {\n            let ret = ''\n            for (let it in data) {\n               ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n            }\n            ret = ret.substring(0, ret.lastIndexOf('&'));\n            return ret\n         }\n       ],\n       headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n       }\n    })\n    .then(response => {\n      if (response.data === 'err') {\n        alert(\"未获取到数据\");     \n      } else {\n        this.setState({\n          recordsDetails:response.data,\n          detailsTitle:title\n        })\n      }\n    })\n  }\n\n  render(){\n    const value = this.state.value;\n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={this.handleChange.bind(this)} aria-label=\"simple tabs example\">\n            <Tab label=\"统计\" {...a11yProps(0)} />\n            <Tab label=\"渠道表\" {...a11yProps(1)} />\n            <Tab label=\"产品表\" {...a11yProps(2)} />\n            <Tab label=\"\" {...a11yProps(3)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0} >\n          <RecordsTable \n            handleChange={this.handleChange.bind(this)} \n            setRecordsDetails={this.setRecordsDetails.bind(this)}\n            channelData={this.state.channelData}\n            productData={this.state.productData}\n            />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <ChannelTable \n          channelData={this.state.channelData} \n          productData={this.state.productData}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <ProductTable \n          productData={this.state.productData}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <RecordsDetails \n          data={this.state.recordsDetails} \n          title={this.state.detailsTitle}\n          />\n        </TabPanel>\n      </div>\n    );\n  }\n\n}","import React from 'react';\nimport './App.css';\nimport Home from './commpents/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n  <SnackbarProvider>\n    <App />\n  </SnackbarProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}